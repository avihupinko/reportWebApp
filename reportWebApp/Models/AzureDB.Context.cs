//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace reportWebApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WrokDBEntities : DbContext
    {
        public WrokDBEntities()
            : base("name=WrokDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<project> projects { get; set; }
        public virtual DbSet<report> reports { get; set; }
        public virtual DbSet<task> tasks { get; set; }
        public virtual DbSet<timeSpentPerClient> timeSpentPerClients { get; set; }
        public virtual DbSet<timeSpentPerTask> timeSpentPerTasks { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual ObjectResult<spGetProjectsByClient_Result> spGetProjectsByClient(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetProjectsByClient_Result>("spGetProjectsByClient", clientIdParameter);
        }
    
        public virtual ObjectResult<spGetTasksByProjectId_Result> spGetTasksByProjectId(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTasksByProjectId_Result>("spGetTasksByProjectId", projectIdParameter);
        }
    
        public virtual ObjectResult<spGetReportsByTaskId_Result> spGetReportsByTaskId(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetReportsByTaskId_Result>("spGetReportsByTaskId", taskIdParameter);
        }
    
        public virtual ObjectResult<spGetTimeSpentPerClient_Result> spGetTimeSpentPerClient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTimeSpentPerClient_Result>("spGetTimeSpentPerClient");
        }
    }
}
